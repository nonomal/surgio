(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{231:function(t,e,s){"use strict";s.r(e);var a=s(0),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"template-模板"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#template-模板"}},[t._v("#")]),t._v(" Template 模板")]),t._v(" "),s("p",[t._v("Surgio 为了能够灵活地定义模板而引入了 "),s("a",{attrs:{href:"https://nunjucks.bootcss.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nunjucks"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("需要注意的是文件名即为该 Template 的名称，后面在定义 Artifact 时会用到。")]),t._v(" "),s("p",[t._v("目录中默认已经包含针对 Surge，Quantumult 和 Clash 的模板和一些网友维护的规则片段 Snippet。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("欢迎大家参与到默认规则的修订中！")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/geekdada/create-surgio-store/tree/master/template/template",target:"_blank",rel:"noopener noreferrer"}},[t._v("项目地址"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"模板变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模板变量"}},[t._v("#")]),t._v(" 模板变量")]),t._v(" "),s("h3",{attrs:{id:"providername"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#providername"}},[t._v("#")]),t._v(" providerName")]),t._v(" "),s("ul",[s("li",[t._v("类型: "),s("code",[t._v("string")])])]),t._v(" "),s("p",[t._v("当前 Provider 的名称。")]),t._v(" "),s("h3",{attrs:{id:"downloadurl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#downloadurl"}},[t._v("#")]),t._v(" downloadUrl")]),t._v(" "),s("ul",[s("li",[t._v("类型: "),s("code",[t._v("string")])])]),t._v(" "),s("p",[t._v("当前文件对应的订阅地址。")]),t._v(" "),s("h3",{attrs:{id:"proxytesturl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#proxytesturl"}},[t._v("#")]),t._v(" proxyTestUrl "),s("Badge",{attrs:{text:"v1.6.0",vertical:"middle"}})],1),t._v(" "),s("ul",[s("li",[t._v("类型: "),s("code",[t._v("string")])])]),t._v(" "),s("p",[t._v("节点测试地址。Surgio 会内置一个推荐的测试地址，你可以直接在模板文件中使用。如果在设置中使用了新的地址，这里也会变成所设的值。")]),t._v(" "),s("h3",{attrs:{id:"nodelist"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodelist"}},[t._v("#")]),t._v(" nodeList")]),t._v(" "),s("ul",[s("li",[t._v("类型: "),s("code",[t._v("object[]")])])]),t._v(" "),s("p",[t._v("过滤之后的节点列表。")]),t._v(" "),s("h3",{attrs:{id:"remotesnippets"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remotesnippets"}},[t._v("#")]),t._v(" remoteSnippets")]),t._v(" "),s("ul",[s("li",[t._v("类型: "),s("code",[t._v("object")])])]),t._v(" "),s("p",[t._v("远程模板片段。假如你已经配置了一个像 "),s("router-link",{attrs:{to:"/guide/custom-config.html#remotesnippets"}},[t._v("这样")]),t._v(" 的远程片段，那就能够以下面的方式使用。")],1),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("{{ remoteSnippets.cn.main('DIRECT') }}\n")])])]),s("p",[t._v("生成的内容如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# China Apps\nUSER-AGENT,MicroMessenger Client,DIRECT\nUSER-AGENT,WeChat*,DIRECT\nUSER-AGENT,MApi*,DIRECT // Dianping\n# Ali\nDOMAIN-KEYWORD,alipay,DIRECT\nDOMAIN-KEYWORD,taobao,DIRECT\nDOMAIN-KEYWORD,alicdn,DIRECT\nDOMAIN-KEYWORD,aliyun,DIRECT\nDOMAIN-KEYWORD,.tmall.,DIRECT\n# China\nDOMAIN-SUFFIX,CN,DIRECT\nDOMAIN-KEYWORD,baidu,DIRECT\n")])])]),s("p",[t._v("如果你需要直接读取远程片段的内容，可以在模板里这样写：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("{{ remoteSnippets.cn.text }}\n")])])]),s("h3",{attrs:{id:"customparams"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#customparams"}},[t._v("#")]),t._v(" customParams")]),t._v(" "),s("ul",[s("li",[t._v("类型: "),s("code",[t._v("object")])])]),t._v(" "),s("p",[t._v("获取自定义的模板参数。请先在 Artifact 中定义再使用。")]),t._v(" "),s("h3",{attrs:{id:"clashproxyconfig"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#clashproxyconfig"}},[t._v("#")]),t._v(" clashProxyConfig")]),t._v(" "),s("ul",[s("li",[t._v("类型: "),s("code",[t._v("string")])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("ul",[s("li",[t._v("支持输出 Shadowsocks, Shadowsocksr, Vmess 节点")]),t._v(" "),s("li",[t._v("Shadowsocksr 是通过 Clashr 项目支持的，你需要在 "),s("a",{attrs:{href:"https://t.me/clashr4ssr",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),s("OutboundLink")],1),t._v(" 下载可执行文件。项目地址在 "),s("a",{attrs:{href:"https://github.com/sun8911879/shadowsocksR",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),s("OutboundLink")],1),t._v("。")])])]),t._v(" "),s("p",[t._v("Clash 的 "),s("code",[t._v("Proxy")]),t._v(" 和 "),s("code",[t._v("Proxy Group")]),t._v(" 配置对象。"),s("code",[t._v("clashProxyConfig")]),t._v(" 的内容依赖 Artifact 的 "),s("router-link",{attrs:{to:"/guide/custom-artifact.html#proxygroupmodifier-nodelist-filters"}},[s("code",[t._v("proxyGroupModifier")]),t._v(" 函数")]),t._v("。")],1),t._v(" "),s("p",[t._v("由于很难在模板中直接书写 Yaml 格式的文本，所以引入了一个特殊的变量用来存储 Clash 的节点配置，然后利用 Nunjucks 的 "),s("a",{attrs:{href:"https://nunjucks.bootcss.com/templating.html#part-cda1d805a3577fa5",target:"_blank",rel:"noopener noreferrer"}},[t._v("filter"),s("OutboundLink")],1),t._v(" 来输出 Yaml 格式文本。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("{{ clashProxyConfig | yaml }}\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("你当然可以在模板中使用 Nunjucks 内置的 filter。")])]),t._v(" "),s("h3",{attrs:{id:"如何在模板中使用变量？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何在模板中使用变量？"}},[t._v("#")]),t._v(" 如何在模板中使用变量？")]),t._v(" "),s("p",[t._v("相信聪明的你已经洞察一切。对，就是用 "),s("code",[t._v(t._s())]),t._v(" 把变量包裹起来。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- .tpl 文件 --\x3e")]),t._v("\n{{ downloadUrl }}\n")])])]),s("p",[t._v("对于 "),s("code",[t._v("customParams")]),t._v("，则可以像这样：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- .tpl 文件 --\x3e")]),t._v("\n{{ customParams.variable }}\n")])])]),s("h2",{attrs:{id:"过滤器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#过滤器"}},[t._v("#")]),t._v(" 过滤器")]),t._v(" "),s("h3",{attrs:{id:"国家和地区过滤器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#国家和地区过滤器"}},[t._v("#")]),t._v(" 国家和地区过滤器")]),t._v(" "),s("p",[t._v("Surgio 内置多个节点名国别/地区过滤器。除非是火星文，Surgio 应该都能识别出来。它们是：")]),t._v(" "),s("ul",[s("li",[t._v("hkFilter")]),t._v(" "),s("li",[t._v("usFilter")]),t._v(" "),s("li",[t._v("japanFilter")]),t._v(" "),s("li",[t._v("singaporeFilter")]),t._v(" "),s("li",[t._v("koreaFilter")]),t._v(" "),s("li",[t._v("taiwanFilter")])]),t._v(" "),s("h3",{attrs:{id:"netflixfilter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netflixfilter"}},[t._v("#")]),t._v(" netflixFilter")]),t._v(" "),s("p",[t._v("Netflix 节点过滤器。Surgio 默认会将名称中包含 "),s("em",[t._v("netflix")]),t._v(", "),s("em",[t._v("hkbn")]),t._v(", "),s("em",[t._v("hkt")]),t._v(", "),s("em",[t._v("hgc")]),t._v("（不分大小写）的节点过滤出来。如果在 Provider 中进行了覆盖则会运行新的方法。")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/geekdada/surgio/blob/master/lib/utils/filter.ts#L38",target:"_blank",rel:"noopener noreferrer"}},[t._v("内置方法定义"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"youtubepremiumfilter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#youtubepremiumfilter"}},[t._v("#")]),t._v(" youtubePremiumFilter")]),t._v(" "),s("p",[t._v("Youtube Premium 节点过滤器。Surgio 默认会将名称中包含 "),s("em",[t._v("日")]),t._v(", "),s("em",[t._v("美")]),t._v(", "),s("em",[t._v("韩")]),t._v(", 🇯🇵, 🇺🇸, 🇰🇷 的节点过滤出来。如果在 Provider 中进行了覆盖则会运行新的方法。")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/geekdada/surgio/blob/master/lib/utils/filter.ts#L81",target:"_blank",rel:"noopener noreferrer"}},[t._v("内置方法定义"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://support.google.com/youtube/answer/6307365?hl=zh-Hans",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看所有支持 Youtube Premium 的国家和地区"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"customfilters"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#customfilters"}},[t._v("#")]),t._v(" customFilters")]),t._v(" "),s("p",[t._v("获取自定义 Filter。关于自定义 Filter 的用法，请阅读 "),s("a",{attrs:{href:"/guide/advance/custom-filter"}},[t._v("进阶 - 自定义 Filter")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"如何使用过滤器？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何使用过滤器？"}},[t._v("#")]),t._v(" 如何使用过滤器？")]),t._v(" "),s("p",[t._v("我们以 "),s("code",[t._v("getSurgeNodes")]),t._v(" 为例。默认情况下，使用 "),s("code",[t._v("getSurgeNodes(nodeList)")]),t._v(" 输出的是所有节点。如果我们在第二个参数的位置传入过滤器，即可过滤想要的节点。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- .tpl 文件 --\x3e")]),t._v("\n{{ getSurgeNodes(nodeList, netflixFilter) }}\n")])])]),s("p",[t._v("这样即可输出支持 Netflix 的节点。")]),t._v(" "),s("p",[t._v("自定义过滤器的使用也非常类似。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- .tpl 文件 --\x3e")]),t._v("\n{{ getSurgeNodes(nodeList, customFilters.this_is_a_filter) }}\n")])])]),s("h2",{attrs:{id:"模板方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模板方法"}},[t._v("#")]),t._v(" 模板方法")]),t._v(" "),s("h3",{attrs:{id:"getsurgenodes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getsurgenodes"}},[t._v("#")]),t._v(" getSurgeNodes")]),t._v(" "),s("p",[s("code",[t._v("getSurgeNodes(nodeList, filter?)")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("filter")]),t._v(" 为可选参数")]),t._v(" "),s("li",[t._v("支持输出 Shadowsocks, Shadowsocksr, HTTPS, Snell, Vmess 节点")]),t._v(" "),s("li",[t._v("请参考 "),s("router-link",{attrs:{to:"/guide/advance/surge-advance.html"}},[t._v("「Surge 进阶 - 生成 SSR 和 V2Ray 订阅」")]),t._v(" 生成针对 Surge 的 SSR 订阅")],1)])]),t._v(" "),s("p",[t._v("生成 Surge 规范的节点列表，例如：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("🇺🇸US = custom, us.example.com, 10000, chacha20-ietf-poly1305, password, https://raw.githubusercontent.com/ConnersHua/SSEncrypt/master/SSEncrypt.module, udp-relay=true, obfs=tls, obfs-host=gateway-carry.icloud.com\n🇭🇰HK(Netflix) = custom, hk.example.com, 10000, chacha20-ietf-poly1305, password, https://raw.githubusercontent.com/ConnersHua/SSEncrypt/master/SSEncrypt.module, udp-relay=true\n")])])]),s("h3",{attrs:{id:"getshadowsocksnodes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getshadowsocksnodes"}},[t._v("#")]),t._v(" getShadowsocksNodes")]),t._v(" "),s("p",[s("code",[t._v("getShadowsocksNodes(nodeList, providerName)")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("ul",[s("li",[t._v("第二个入参为 Group 名称")])])]),t._v(" "),s("p",[t._v("生成 Shadowsocks Scheme 列表，例如：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("ss://cmM0LW1kNTpwYXNzd29yZA@us.com:1234/?group=subscribe_demo#%F0%9F%87%BA%F0%9F%87%B8%20US\nss://cmM0LW1kNTpwYXNzd29yZA@hk.com:1234/?group=subscribe_demo#%F0%9F%87%AD%F0%9F%87%B0%20HK\n")])])]),s("p",[t._v("你可以使用 "),s("code",[t._v("base64")]),t._v(" filter 来将上面的文本转换成 Quantumult 能够识别的订阅内容。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- .tpl 文件 --\x3e")]),t._v("\n{{ getShadowsocksNodes(nodeList, providerName) | base64 }}\n")])])]),s("h3",{attrs:{id:"getquantumultnodes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getquantumultnodes"}},[t._v("#")]),t._v(" getQuantumultNodes")]),t._v(" "),s("p",[s("code",[t._v("getQuantumultNodes(nodeList, providerName?, filter?)")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("ul",[s("li",[t._v("第二个参数为 Group 名称，可选")]),t._v(" "),s("li",[t._v("第三个参数可选，可传入标准的过滤器或自定义的过滤器")]),t._v(" "),s("li",[t._v("支持输出 Shadowsocks, Shadowsocksr, Vmess, HTTPS 节点")])])]),t._v(" "),s("p",[t._v("生成 Quantumult 的节点配置，例如：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("vmess://5rWL6K+VIDEgPSB2bWVzcywxLjEuMS4xLDgwODAsY2hhY2hhMjAtaWV0Zi1wb2x5MTMwNSwiMTM4NmY4NWUtNjU3Yi00ZDZlLTlkNTYtNzhiYWRiNzVlMWZkIiw2NCxncm91cD1TdXJnaW8sb3Zlci10bHM9ZmFsc2UsY2VydGlmaWNhdGU9MSxvYmZzPXdzLG9iZnMtcGF0aD0iLyIsb2Jmcy1oZWFkZXI9Ikhvc3Q6ZXhhbXBsZS5jb21bUnJdW05uXVVzZXItQWdlbnQ6TW96aWxsYS81LjAgKGlQaG9uZTsgQ1BVIGlQaG9uZSBPUyAxMl8zXzEgbGlrZSBNYWMgT1MgWCkgQXBwbGVXZWJLaXQvNjA1LjEuMTUgKEtIVE1MLCBsaWtlIEdlY2tvKSBNb2JpbGUvMTVFMTQ4Ig==\nvmess://5rWL6K+VIDIgPSB2bWVzcywxLjEuMS4xLDgwODAsY2hhY2hhMjAtaWV0Zi1wb2x5MTMwNSwiMTM4NmY4NWUtNjU3Yi00ZDZlLTlkNTYtNzhiYWRiNzVlMWZkIiw2NCxncm91cD1TdXJnaW8sb3Zlci10bHM9ZmFsc2UsY2VydGlmaWNhdGU9MSxvYmZzPXRjcCxvYmZzLXBhdGg9Ii8iLG9iZnMtaGVhZGVyPSJIb3N0OjEuMS4xLjFbUnJdW05uXVVzZXItQWdlbnQ6TW96aWxsYS81LjAgKGlQaG9uZTsgQ1BVIGlQaG9uZSBPUyAxMl8zXzEgbGlrZSBNYWMgT1MgWCkgQXBwbGVXZWJLaXQvNjA1LjEuMTUgKEtIVE1MLCBsaWtlIEdlY2tvKSBNb2JpbGUvMTVFMTQ4Ig==\n")])])]),s("p",[t._v("你可以使用 "),s("code",[t._v("base64")]),t._v(" filter 来将上面的文本转换成 Quantumult 能够识别的订阅内容。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- .tpl 文件 --\x3e")]),t._v("\n{{ getQuantumultNodes(nodeList, providerName) | base64 }}\n")])])]),s("h3",{attrs:{id:"getquantumultxnodes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getquantumultxnodes"}},[t._v("#")]),t._v(" getQuantumultXNodes "),s("Badge",{attrs:{text:"v1.3.0",vertical:"middle"}})],1),t._v(" "),s("p",[s("code",[t._v("getQuantumultXNodes(nodeList, filter?)")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("ul",[s("li",[t._v("第二个参数可选，可传入标准的过滤器或自定义的过滤器")]),t._v(" "),s("li",[t._v("支持输出 Shadowsocks, Shadowsocksr, Vmess, HTTPS 节点")]),t._v(" "),s("li",[t._v("支持添加 "),s("code",[t._v("udp-relay")]),t._v(" 和 "),s("code",[t._v("fast-open")]),t._v(" 配置")])])]),t._v(" "),s("p",[t._v("生成 QuantumulX 的节点配置。该配置能用于 "),s("a",{attrs:{href:"https://github.com/crossutility/Quantumult-X/blob/master/sample.conf#L88",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("server_local")]),s("OutboundLink")],1),t._v(" 或者 "),s("a",{attrs:{href:"https://github.com/crossutility/Quantumult-X/blob/master/server-complete.txt",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("server_remote")]),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"getmellownodes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getmellownodes"}},[t._v("#")]),t._v(" getMellowNodes "),s("Badge",{attrs:{text:"v1.4.0",vertical:"middle"}})],1),t._v(" "),s("p",[s("code",[t._v("getMellowNodes(nodeList, filter?)")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("ul",[s("li",[t._v("第二个参数可选，可传入标准的过滤器或自定义的过滤器")]),t._v(" "),s("li",[t._v("支持输出 Vmess 节点")])])]),t._v(" "),s("p",[t._v("该方法输出的数据结构如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Proxy-1, vmess1, vmess1://75da2e14-4d08-480b-b3cb-0079a0c51275@example.com:443/v2?network=ws&tls=true\nProxy-2, vmess1, vmess1://75da2e14-4d08-480b-b3cb-0079a0c51275@example.com:10025?network=tcp\n")])])]),s("p",[t._v("使用时请参考 "),s("a",{attrs:{href:"https://github.com/mellow-io/mellow#%E6%9B%B4%E5%A4%9A%E9%85%8D%E7%BD%AE",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"getnodenames"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getnodenames"}},[t._v("#")]),t._v(" getNodeNames")]),t._v(" "),s("p",[s("code",[t._v("getNodeNames(nodeList, filter?, separator?)")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("filter")]),t._v(" 为可选参数")]),t._v(" "),s("li",[s("code",[t._v("separator")]),t._v(" 为可选参数。可以通过这个参数修改节点名的分隔符，你可能会在编写 Mellow 配置时传入 "),s("code",[t._v(":")])])])]),t._v(" "),s("p",[t._v("生成一段逗号分隔的名称字符串，例如：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("🇺🇸US, 🇭🇰HK(Netflix)\n")])])]),s("p",[t._v("若需要过滤 Netflix 节点则传入：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getNodeNames")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nodeList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" netflixFilter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("如果只需要更改分隔符则这样写：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getNodeNames")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nodeList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("':'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"getdownloadurl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getdownloadurl"}},[t._v("#")]),t._v(" getDownloadUrl")]),t._v(" "),s("p",[s("code",[t._v("getDownloadUrl(name)")])]),t._v(" "),s("p",[t._v("获得另一个文件的下载地址（链接前面部分取决于 "),s("code",[t._v("surgio.conf.js")]),t._v(" 中 "),s("code",[t._v("urlBase")]),t._v(" 的值），则可以这样写：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDownloadUrl")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'example.conf'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://example.com/example.conf")]),t._v("\n")])])]),s("h3",{attrs:{id:"如何在模板中调用方法？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何在模板中调用方法？"}},[t._v("#")]),t._v(" 如何在模板中调用方法？")]),t._v(" "),s("p",[t._v("上面提到的这些模板方法都能够在模板文件中使用。原则就是用 "),s("code",[t._v(t._s())]),t._v(" 把方法包裹起来。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- .tpl 文件 --\x3e")]),t._v("\n{{ getQuantumultNodes(nodeList, providerName) | base64 }}\n\n{{ getSurgeNodes(nodeList) }}\n")])])]),s("h2",{attrs:{id:"片段-snippet"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#片段-snippet"}},[t._v("#")]),t._v(" 片段 (Snippet)")]),t._v(" "),s("h3",{attrs:{id:"如何使用片段？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何使用片段？"}},[t._v("#")]),t._v(" 如何使用片段？")]),t._v(" "),s("p",[t._v("片段是一种特殊的模板，它依赖 Nunjucks 的 "),s("a",{attrs:{href:"https://mozilla.github.io/nunjucks/cn/templating.html#macro",target:"_blank",rel:"noopener noreferrer"}},[t._v("宏（macro）"),s("OutboundLink")],1),t._v(" 来实现。什么是宏不重要，你只要依葫芦画瓢就可以写出自己的「片段」。")]),t._v(" "),s("p",[t._v("我们以 "),s("code",[t._v("snippet")]),t._v(" 目录内的 "),s("code",[t._v("blocked_rules.tpl")]),t._v(" 为例（内容有省略）：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("{% macro main(rule) %}\nDOMAIN-KEYWORD,bitly,{{ rule }}\nDOMAIN-KEYWORD,blogspot,{{ rule }}\nDOMAIN-KEYWORD,dropbox,{{ rule }}\nDOMAIN-SUFFIX,twitpic.com,{{ rule }}\nDOMAIN-SUFFIX,youtu.be,{{ rule }}\nDOMAIN-SUFFIX,ytimg.com,{{ rule }}\n{% endmacro %}\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("ul",[s("li",[t._v("宏暴露了一个 "),s("code",[t._v("main")]),t._v(" 方法，传入一个字符串变量")]),t._v(" "),s("li",[t._v("你可以使用 Nunjucks 宏的其它特性")])])]),t._v(" "),s("p",[t._v("使用的时候只需要 "),s("code",[t._v("import")]),t._v(" 这个模板：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("{% import './snippet/blocked_rules.tpl' as blocked_rules %}\n\n{{ blocked_rules.main('🚀 Proxy') }}\n")])])]),s("p",[t._v("最终得到的规则是：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("DOMAIN-KEYWORD,bitly,🚀 Proxy\nDOMAIN-KEYWORD,blogspot,🚀 Proxy\nDOMAIN-KEYWORD,dropbox,🚀 Proxy\nDOMAIN-SUFFIX,twitpic.com,🚀 Proxy\nDOMAIN-SUFFIX,youtu.be,🚀 Proxy\nDOMAIN-SUFFIX,ytimg.com,🚀 Proxy\n")])])]),s("h3",{attrs:{id:"clash-规则格式处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#clash-规则格式处理"}},[t._v("#")]),t._v(" Clash 规则格式处理")]),t._v(" "),s("p",[t._v("由于 Yaml 的数组类型必须在每一条数据前加 "),s("code",[t._v("-")]),t._v("，所以提供了一个处理函数将规则转换成 Clash 能够识别的数组。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- .tpl 文件 --\x3e")]),t._v("\n{% import './snippet/blocked_rules.tpl' as blocked_rules %}\n\n{{ blocked_rules.main('🚀 Proxy') | clash }}\n")])])]),s("p",[t._v("最终得到的规则是：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("- DOMAIN-KEYWORD,bitly,🚀 Proxy\n- DOMAIN-KEYWORD,blogspot,🚀 Proxy\n- DOMAIN-KEYWORD,dropbox,🚀 Proxy\n- DOMAIN-SUFFIX,twitpic.com,🚀 Proxy\n- DOMAIN-SUFFIX,youtu.be,🚀 Proxy\n- DOMAIN-SUFFIX,ytimg.com,🚀 Proxy\n")])])]),s("p",[t._v("需要注意的是，"),s("code",[t._v("clash")]),t._v(" 除了更改格式，还会将 Clash 不支持的规则类型省略，例如：")]),t._v(" "),s("ul",[s("li",[t._v("USER-AGENT")]),t._v(" "),s("li",[t._v("PROCESS-NAME")]),t._v(" "),s("li",[t._v("no-resolve（仅除去该字段，其它部分保留）")])]),t._v(" "),s("h3",{attrs:{id:"quantumult-x-规则处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#quantumult-x-规则处理"}},[t._v("#")]),t._v(" Quantumult X 规则处理")]),t._v(" "),s("p",[t._v("处理后的规则仅包含 "),s("a",{attrs:{href:"https://github.com/crossutility/Quantumult-X/blob/master/sample.conf#L103",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),s("OutboundLink")],1),t._v(" 列出的几种 Quantumult X 支持的规则类型，以及 "),s("code",[t._v("DOMAIN")]),t._v(", "),s("code",[t._v("DOMAIN-SUFFIX")]),t._v(", "),s("code",[t._v("DOMAIN-KEYWORD")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- .tpl 文件 --\x3e")]),t._v("\n{% import './snippet/blocked_rules.tpl' as blocked_rules %}\n\n{{ blocked_rules.main('🚀 Proxy') | quantumultx }}\n")])])]),s("p",[t._v("除此之外，规则处理模块还支持以下功能。")]),t._v(" "),s("h4",{attrs:{id:"转换-surge-script-规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转换-surge-script-规则"}},[t._v("#")]),t._v(" 转换 Surge Script 规则 "),s("Badge",{attrs:{text:"v1.7.1",vertical:"top"}})],1),t._v(" "),s("p",[t._v("规则处理模块能够识别以下类型的 Surge Script 规则，转换成 Quantumult X 的 Rewrite 规则。需要注意的是，为了能够正常使用这些规则，你需要部署 Surgio 托管 API。")]),t._v(" "),s("p",[t._v("由于 Surge Ruleset 的定义中不包含 Script 部分，所以当你要转换 Script 规则时推荐使用下面的方案。")]),t._v(" "),s("p",[t._v("我们前面已经介绍过如何定义规则片段，你要做的就是把要转换的规则全部放进一个规则片段中，例如：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- ./snippet/surge_script.tpl --\x3e")]),t._v("\n\n{% macro main() %}\nhttp-response ^https?://m?api\\.weibo\\.c(n|om)/2/(statuses/(unread|extend|positives/get|(friends|video)(/|_)timeline)|stories/(video_stream|home_list)|(groups|fangle)/timeline|profile/statuses|comments/build_comments|photo/recommend_list|service/picfeed|searchall|cardlist|page|\\!/photos/pic_recommend_status) script-path=https://raw.githubusercontent.com/yichahucha/surge/master/wb_ad.js,requires-body=true\nhttp-response ^https?://(sdk|wb)app\\.uve\\.weibo\\.com(/interface/sdk/sdkad.php|/wbapplua/wbpullad.lua) script-path=https://raw.githubusercontent.com/yichahucha/surge/master/wb_launch.js,requires-body=true\n{% endmacro %}\n")])])]),s("p",[t._v("然后在模板文件中引用：")]),t._v(" "),s("p",[s("em",[t._v("for Surge")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("{% import './snippet/surge_script.tpl' as surge_script %}\n\n[Script]\n{{ blocked_rules.main() }}\n")])])]),s("p",[s("em",[t._v("for Quantumult X")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("{% import './snippet/surge_script.tpl' as surge_script %}\n\n[rewrite_local]\n{{ blocked_rules.main() | quantumultx }}\n")])])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[t._v("Surgio 不会处理类似 "),s("code",[t._v("[rewrite_local]")]),t._v(" 这样的标题，所以请 "),s("strong",[t._v("不要")]),t._v(" 将它们也放到片段中。")])]),t._v(" "),s("h3",{attrs:{id:"mellow-规则处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mellow-规则处理"}},[t._v("#")]),t._v(" Mellow 规则处理")]),t._v(" "),s("p",[t._v("由于 Mellow 目前不支持 "),s("code",[t._v("URL-REGEX")]),t._v(", "),s("code",[t._v("USER-AGENT")]),t._v(" 和 "),s("code",[t._v("no-resolve")]),t._v(" 关键词，如果你需要引入 Surge 的远程片段则需要在引入时加入这个处理器。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- .tpl 文件 --\x3e")]),t._v("\n{% import './snippet/blocked_rules.tpl' as blocked_rules %}\n\n{{ blocked_rules.main('🚀 Proxy') | mellow }}\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);